name: CI/CD Pipeline

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'

env:
  AWS_ACCESS_KEY_ID: AKIA5MX4PTDN3LL2WWUE
  AWS_SECRET_ACCESS_KEY : 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
  AWS_ACCOUNT_ID: 920726247643
  AWS_REGION: us-west-1
  ECR_REPOSITORY: huseyn01/qa-test-automation
  AWS_REPOSITORY: 920726247643.dkr.ecr.us-west-1.amazonaws.com/huseyn01/qa-test-automation
  IMAGE_NAME: automation-app
  TAG: latest
  IMAGE_FULL_NAME: 920726247643.dkr.ecr.us-west-1.amazonaws.com/huseyn01/qa-test-automation:latest
  CLUSTER_NAME: qa-eks-new


jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build, tag, and push the Docker image
      - name: Build, tag, and push Docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$ECR_REPOSITORY:latest
