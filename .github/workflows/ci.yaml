name: CI/CD Pipeline

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'

env:
  AWS_ACCESS_KEY_ID: AKIA5MX4PTDN3LL2WWUE
  AWS_SECRET_ACCESS_KEY : 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
  AWS_ACCOUNT_ID: 920726247643
  AWS_REGION: us-west-1
  ECR_REPOSITORY: huseyn01/qa-test-automation
  AWS_REPOSITORY: 920726247643.dkr.ecr.us-west-1.amazonaws.com/huseyn01/qa-test-automation
  IMAGE_NAME: automation-app
  TAG: latest
  IMAGE_FULL_NAME: 920726247643.dkr.ecr.us-west-1.amazonaws.com/huseyn01/qa-test-automation:latest
  CLUSTER_NAME: qa-eks-new


jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build, tag, and push the Docker image
      - name: Build, tag, and push Docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$ECR_REPOSITORY:latest

  deploy-eks:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    container:
      image: matshareyourscript/aws-helm-kubectl  # Use the same Docker image

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Check out the repository code

      - name: Install dependencies
        run: |
          apk add --no-cache curl python3 py3-pip
          pip3 install awscli

      - name: Configure AWS CLI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.CLUSTER_NAME }}

      - name: Create namespace (if not exists)
        run: |
          kubectl create namespace automation --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f manifests/ -n automation
